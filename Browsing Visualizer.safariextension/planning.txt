[{
	'tab': 'parent',
	'sessionStart': '',
	'parent': null,
	'childSessions': [
		'link followed inside parent',
	],
	'current': false,
	'previous': false,
},
	'tab': 'link followed inside parent',
	'sessionStart': '',
	'parent': 'parent',
	'childSessions': [
    ...
	],
	'current': false,
	'previous': false,
}]

# Implementation

[x] handle child session detection
	[x] in the injected script we need to create a onclick
		listener for each link on the page. This onlclick
		listener should send a message to the extension
		indicating that the next page being visited is a child
		of the last page.
	- the extension will then create a new session object
		with the parent key set to the the previous session
[x] handle search bar searches
	[x] follow parent references to top level parent
		and start new child tree
[ ] handle redirects by ignoring them
  [x]ignore or remove any nodes that have a duration of 0
  [ ] write test to assert that redirects are filtered out when saving
[x] handle back button navigation
[x] handle forward button navigation
[ ] handle export of objects
  - HTML5 local storage in JSON format
[ ] parse Google url's for child URL visit detection
[ ] detect innactive periods when user has left the browser
  [ ] threshold of time sense scrolled or mouse movement
  [ ] consider if a user is watching a video
    [ ] fullscreenchange event when a full screen is enabled/disabled
[x] implement logic to detect sub-domains

# Testing

[ ] write test cases
[ ] add tolerences to timing tests
